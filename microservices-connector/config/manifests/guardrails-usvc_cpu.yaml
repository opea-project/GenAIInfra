---
# Source: guardrails-usvc/charts/tgi-guardrails/templates/configmap.yaml
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

apiVersion: v1
kind: ConfigMap
metadata:
  name: guardrails-usvc-tgi-guardrails-config
  labels:
    helm.sh/chart: tgi-guardrails-1.4.0
    app.kubernetes.io/name: tgi-guardrails
    app.kubernetes.io/instance: guardrails-usvc
    app.kubernetes.io/version: "2.1.0"
    app.kubernetes.io/managed-by: Helm
data:
  MODEL_ID: "meta-llama/Meta-Llama-Guard-2-8B"
  PORT: "2080"
  HF_TOKEN: "insert-your-huggingface-token-here"
  http_proxy: ""
  https_proxy: ""
  no_proxy: ""
  NUMBA_CACHE_DIR: "/tmp"
  HUGGINGFACE_HUB_CACHE: "/data"
  HF_HOME: "/tmp/.cache/huggingface"
  CUDA_GRAPHS: "0"
  HF_HUB_DISABLE_PROGRESS_BARS: "1"
  HF_HUB_ENABLE_HF_TRANSFER: "0"
  # More options for HPU
---
# Source: guardrails-usvc/templates/configmap.yaml
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

apiVersion: v1
kind: ConfigMap
metadata:
  name: guardrails-usvc-config
  labels:
    helm.sh/chart: guardrails-usvc-1.4.0
    app.kubernetes.io/name: guardrails-usvc
    app.kubernetes.io/instance: guardrails-usvc
    app.kubernetes.io/version: "v1.0"
    app.kubernetes.io/managed-by: Helm
data:
  SAFETY_GUARD_ENDPOINT: "http://guardrails-usvc-tgi-guardrails"
  SAFETY_GUARD_MODEL_ID: "meta-llama/Meta-Llama-Guard-2-8B"
  GUARDRAILS_COMPONENT_NAME: "OPEA_LLAMA_GUARD"
  HF_TOKEN: "insert-your-huggingface-token-here"
  HF_HOME: "/tmp/.cache/huggingface"
  LOGFLAG: ""
  http_proxy: ""
  https_proxy: ""
  no_proxy: ""
---
# Source: guardrails-usvc/charts/tgi-guardrails/templates/service.yaml
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

apiVersion: v1
kind: Service
metadata:
  name: guardrails-usvc-tgi-guardrails
  labels:
    helm.sh/chart: tgi-guardrails-1.4.0
    app.kubernetes.io/name: tgi-guardrails
    app.kubernetes.io/instance: guardrails-usvc
    app.kubernetes.io/version: "2.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 2080
      protocol: TCP
      name: tgi
  selector:
    app.kubernetes.io/name: tgi-guardrails
    app.kubernetes.io/instance: guardrails-usvc
---
# Source: guardrails-usvc/templates/service.yaml
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

apiVersion: v1
kind: Service
metadata:
  name: guardrails-usvc
  labels:
    helm.sh/chart: guardrails-usvc-1.4.0
    app.kubernetes.io/name: guardrails-usvc
    app.kubernetes.io/instance: guardrails-usvc
    app.kubernetes.io/version: "v1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 9090
      targetPort: 9090
      protocol: TCP
      name: guardrails-usvc
  selector:
    app.kubernetes.io/name: guardrails-usvc
    app.kubernetes.io/instance: guardrails-usvc
---
# Source: guardrails-usvc/charts/tgi-guardrails/templates/deployment.yaml
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

apiVersion: apps/v1
kind: Deployment
metadata:
  name: guardrails-usvc-tgi-guardrails
  labels:
    helm.sh/chart: tgi-guardrails-1.4.0
    app.kubernetes.io/name: tgi-guardrails
    app.kubernetes.io/instance: guardrails-usvc
    app.kubernetes.io/version: "2.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: tgi-guardrails
      app.kubernetes.io/instance: guardrails-usvc
  template:
    metadata:
      
      labels:
        app.kubernetes.io/name: tgi-guardrails
        app.kubernetes.io/instance: guardrails-usvc
    spec:      
      serviceAccountName: default
      securityContext:
        {}
      initContainers:
        - name: model-downloader
          envFrom:
            - configMapRef:
                name: guardrails-usvc-tgi-guardrails-config
          securityContext:
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            runAsGroup: 0
            capabilities:
              drop:
              - ALL
              add:
              - DAC_OVERRIDE
              # To be able to make data model directory group writable for
              # previously downloaded model by old versions of helm chart
              - FOWNER
            seccompProfile:
              type: RuntimeDefault
          image: huggingface/downloader:0.17.3
          command: ['sh', '-ec']
          args:
            - |
              echo "Huggingface log in ...";
              huggingface-cli login --token $(HF_TOKEN);
              echo "Download model meta-llama/Meta-Llama-Guard-2-8B ... ";
              huggingface-cli download --cache-dir /data "meta-llama/Meta-Llama-Guard-2-8B";
              echo "Change model files mode ...";
              chmod -R g+w /data/models--meta-llama--Meta-Llama-Guard-2-8B;
              # NOTE: Buggy logout command;
              # huggingface-cli logout;
          volumeMounts:
            - mountPath: /data
              name: model-volume
            - mountPath: /tmp
              name: tmp
      containers:
        - name: tgi-guardrails
          envFrom:
            - configMapRef:
                name: guardrails-usvc-tgi-guardrails-config
            - configMapRef:
                name: extra-env-config
                optional: true
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 0
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          image: "ghcr.io/huggingface/text-generation-inference:2.4.0-intel-cpu"
          volumeMounts:
            - mountPath: /data
              name: model-volume
            - mountPath: /dev/shm
              name: shm
            - mountPath: /tmp
              name: tmp
            - mountPath: /usr/src/out
              name: tokenizer
          ports:
            - name: http
              containerPort: 2080
              protocol: TCP
          readinessProbe:
            initialDelaySeconds: 16
            periodSeconds: 8
            tcpSocket:
              port: http
            timeoutSeconds: 4
          startupProbe:
            failureThreshold: 180
            initialDelaySeconds: 10
            periodSeconds: 5
            tcpSocket:
              port: http
            timeoutSeconds: 2
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
      volumes:
        - name: model-volume
          hostPath:
            path: /mnt/opea-models
            type: Directory
        - name: shm
          emptyDir:
            medium: Memory
            sizeLimit: 1Gi
        - name: tmp
          emptyDir: {}
        - name: tokenizer
          emptyDir: {}
      # extra time to finish processing buffered requests on CPU before pod is forcibly terminated
      terminationGracePeriodSeconds: 120
---
# Source: guardrails-usvc/templates/deployment.yaml
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

apiVersion: apps/v1
kind: Deployment
metadata:
  name: guardrails-usvc
  labels:
    helm.sh/chart: guardrails-usvc-1.4.0
    app.kubernetes.io/name: guardrails-usvc
    app.kubernetes.io/instance: guardrails-usvc
    app.kubernetes.io/version: "v1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: guardrails-usvc
      app.kubernetes.io/instance: guardrails-usvc
  template:
    metadata:
      
      labels:
        app.kubernetes.io/name: guardrails-usvc
        app.kubernetes.io/instance: guardrails-usvc
    spec:      
      serviceAccountName: default
      securityContext:
        {}
      initContainers:
        - name: wait-for-llm
          envFrom:
            - configMapRef:
                name: guardrails-usvc-config
            - configMapRef:
                name: extra-env-config
                optional: true
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          image: busybox:1.36
          command: ["sh", "-c"]
          args:
            - |
              proto=$(echo ${SAFETY_GUARD_ENDPOINT} | sed -n 's/.*\(http[s]\?\):\/\/\([^ :]\+\):\?\([0-9]*\).*/\1/p');
              host=$(echo ${SAFETY_GUARD_ENDPOINT} | sed -n 's/.*\(http[s]\?\):\/\/\([^ :]\+\):\?\([0-9]*\).*/\2/p');
              port=$(echo ${SAFETY_GUARD_ENDPOINT} | sed -n 's/.*\(http[s]\?\):\/\/\([^ :]\+\):\?\([0-9]*\).*/\3/p');
              if [ -z "$port" ]; then
                  port=80;
                  [[ "$proto" = "https" ]] && port=443;
              fi;
              wait_timeout=1;
              total_timeout=60;
              j=0;
              while ! nc -w ${wait_timeout} -z ${host} ${port}; do
                j=$((j+wait_timeout));
                [[ $j -ge ${total_timeout} ]] && echo "ERROR: ${host}:${port} is NOT reachable in $j seconds!" && exit 1;
                j=$((j+2)); sleep 2;
              done;
              echo "${host}:${port} is reachable within $j seconds.";
      containers:
        - name: guardrails-usvc
          envFrom:
            - configMapRef:
                name: guardrails-usvc-config
            - configMapRef:
                name: extra-env-config
                optional: true
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          image: "opea/guardrails:1.4"
          ports:
            - name: guardrails-usvc
              containerPort: 9090
              protocol: TCP
          volumeMounts:
            - mountPath: /tmp
              name: tmp
          readinessProbe:
            httpGet:
              path: v1/health_check
              port: guardrails-usvc
            initialDelaySeconds: 5
            periodSeconds: 5
          startupProbe:
            failureThreshold: 120
            httpGet:
              path: v1/health_check
              port: guardrails-usvc
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
      volumes:
        - name: tmp
          emptyDir: {}
---
# Source: guardrails-usvc/charts/tgi-guardrails/templates/serviceaccount.yaml
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
---
# Source: guardrails-usvc/charts/tgi-guardrails/templates/servicemonitor.yaml
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
#
# Dashboard for the exposed TGI metrics:
# - https://grafana.com/grafana/dashboards/19831-text-generation-inference-dashboard/
# Metric descriptions:
# - https://github.com/huggingface/text-generation-inference/discussions/1127#discussioncomment-7240527
---
# Source: guardrails-usvc/templates/serviceaccount.yaml
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
