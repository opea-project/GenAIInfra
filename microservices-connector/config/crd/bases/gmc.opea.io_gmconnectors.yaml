# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: gmconnectors.gmc.opea.io
spec:
  group: gmc.opea.io
  names:
    kind: GMConnector
    listKind: GMConnectorList
    plural: gmconnectors
    shortNames:
    - gmc
    singular: gmconnectors
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.accessUrl
      name: URL
      type: string
    - jsonPath: .status.status
      name: Ready
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha3
    schema:
      openAPIV3Schema:
        description: GMConnector is the Schema for the gmconnectors API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: GMConnectorSpec defines the desired state of GMConnector
            properties:
              nodes:
                additionalProperties:
                  properties:
                    routerType:
                      description: |-
                        RouterType


                        - `Sequence:` chain multiple steps with input/output from previous step


                        - `Ensemble:` routes the request to multiple destinations and then merge the responses


                        - `Switch:` routes the request to one of the steps based on condition
                      enum:
                      - Sequence
                      - Ensemble
                      - Switch
                      type: string
                    steps:
                      description: Steps defines destinations for the current router
                        node
                      items:
                        description: Step defines the target of the current step with
                          condition, weights and data.
                        properties:
                          condition:
                            description: routing based on the condition
                            type: string
                          data:
                            description: |-
                              request data sent to the next route with input/output from the previous step
                              $request
                              $response.predictions
                            type: string
                          dependency:
                            description: to decide whether a step is a hard or a soft
                              dependency in the Graph
                            enum:
                            - Soft
                            - Hard
                            type: string
                          externalService:
                            description: ExternalService URL, mutually exclusive with
                              InternalService.
                            type: string
                          internalService:
                            description: InternalService URL, mutually exclusive with
                              ExternalService.
                            properties:
                              config:
                                additionalProperties:
                                  type: string
                                type: object
                              isDownstreamService:
                                description: |-
                                  in the OPEA context, some service can automatically trigger another one
                                  if this field is not empty, means the downstream service will be invoked
                                type: boolean
                              nameSpace:
                                type: string
                              serviceName:
                                type: string
                            type: object
                          name:
                            description: Unique name for the step within this node
                            type: string
                          nodeName:
                            description: The node name for routing as the next step.
                            type: string
                          serviceUrl:
                            description: |-
                              this is not for the users to set
                              when the service is ready, save the URL here for router to call
                            type: string
                        type: object
                      type: array
                  required:
                  - routerType
                  type: object
                type: object
              routerConfig:
                properties:
                  config:
                    additionalProperties:
                      type: string
                    type: object
                  name:
                    type: string
                  nameSpace:
                    type: string
                  serviceName:
                    type: string
                required:
                - name
                - nameSpace
                - serviceName
                type: object
            required:
            - nodes
            - routerConfig
            type: object
          status:
            description: GMConnectorStatus defines the observed state of GMConnector.
            properties:
              accessUrl:
                description: AccessURL of the entrypoint for the GMConnector
                type: string
              annotations:
                additionalProperties:
                  type: string
                description: |-
                  Annotations is additional Status fields for the Resource to save some
                  additional State as well as convey more information to the user. This is
                  roughly akin to Annotations on any k8s resource, just the reconciler conveying
                  richer information outwards.
                type: object
              condition:
                description: conditions applied to the GMConnector. Known conditions
                  are "Success", and "Failed".
                properties:
                  lastUpdateTime:
                    description: lastUpdateTime is the time of the last update to
                      this condition
                    format: date-time
                    type: string
                  message:
                    description: message contains a human readable message with details
                      about the GMConnector state
                    type: string
                  reason:
                    description: The reason for the condition's last transition.
                    type: string
                  type:
                    description: |-
                      type of the condition. Known conditions are "Success", and "Failed".


                      A "Success" indicating the required services in the GMConnector was ready.


                      A "Failed" indicating the GMConnector failed to get required service ready.
                    type: string
                type: object
              status:
                description: Conditions for GMConnector
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
