
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

---
apiVersion: v1
data:
  oauth2-proxy.cfg: |-
    # Provider config
    provider="keycloak-oidc"
    provider_display_name="Keycloak"
    login_url="http://${KEYCLOAK_ADDR}/realms/${REALM}/protocol/openid-connect/auth"
    redeem_url="http://${KEYCLOAK_ADDR}/realms/${REALM}/protocol/openid-connect/token"
    validate_url="http://${KEYCLOAK_ADDR}/realms/${REALM}/protocol/openid-connect/userinfo"
    profile_url="http://${KEYCLOAK_ADDR}/realms/${REALM}/protocol/openid-connect/userinfo"
    # Client config
    client_id="${CLIENT}"
    client_secret="${CLIENT_SECRET}"
    cookie_secret="${COOKIE_SECRET}"
    cookie_secure="false"
    allowed_groups=["/user"]
    allowed_roles=["${CLIENT}:user"]
    # Upstream config
    http_address="0.0.0.0:4180"
    upstreams=["static://200"]
    oidc_issuer_url="http://${KEYCLOAK_ADDR}/realms/${REALM}"
    oidc_groups_claim="groups"
    scope="openid groups"
    whitelist_domains=["*"]
    # Redis session store config
    session_store_type="redis"
    redis_connection_url="redis://redis-service:6379"
    # Redirect url
    redirect_url="http://chatqna-ui.com:${INGRESS_PORT}/oauth2/callback"
    #extra attributes
    pass_host_header = true
    reverse_proxy = true
    auth_logging = true
    cookie_httponly = true
    cookie_refresh = "2m"
    cookie_expire = "3m"
    email_domains = "*"
    pass_access_token = true
    pass_authorization_header = true
    request_logging = true
    set_authorization_header = true
    set_xauthrequest = true
    silence_ping_logging = true
    skip_provider_button = true
    skip_auth_strip_headers = false
    skip_jwt_bearer_tokens = true
    ssl_insecure_skip_verify = true
    standard_logging = true
kind: ConfigMap
metadata:
  name: oauth2-proxy-config
  namespace: oauth2-proxy
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: oauth2-proxy
  name: oauth2-proxy
  namespace: oauth2-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "oauth2-proxy"
  template:
    metadata:
      labels:
        app: oauth2-proxy
        sidecar.istio.io/inject: "true"
    spec:
      volumes:
        - name: oauth2-proxy-config
          configMap:
            name: oauth2-proxy-config
      containers:
      - name: oauth2-proxy
        image: "quay.io/oauth2-proxy/oauth2-proxy:latest"
        ports:
        - containerPort: 4180
        volumeMounts:
        - name: oauth2-proxy-config
          mountPath: /etc/oauth2-proxy.cfg
          subPath: oauth2-proxy.cfg
        args:
          - --config=/etc/oauth2-proxy.cfg
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: oauth-proxy
  name: oauth-proxy
  namespace: oauth2-proxy
spec:
  ports:
  - name: http-oauthproxy
    port: 4180
    protocol: TCP
    targetPort: 4180
  selector:
    app: oauth-proxy
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
