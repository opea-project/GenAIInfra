# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

apiVersion: v1
kind: Pod
metadata:
  name: {{ include "data-prep.fullname" . }}-testpod
  labels:
    {{- include "data-prep.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
    #"helm.sh/hook-delete-policy": "hook-succeeded, hook-failure"
spec:
  containers:
    - name: curl
      image: python:3.10.14
      command: ['bash', '-c']
      {{- if contains "dataprep-multimodal-vdms" .Values.image.repository }}
      args:
        - |
          https_proxy={{ .Values.global.https_proxy }} curl -svLO "https://github.com/opea-project/GenAIExamples/raw/refs/heads/main/VideoQnA/docker_compose/intel/cpu/xeon/data/op_1_0320241830.mp4"
          max_retry=5
          for ((i=1; i<=max_retry; i++)); do
            curl http://{{ include "data-prep.fullname" . }}:{{ .Values.service.port }}/v1/dataprep -sS --fail-with-body \
            -X POST \
            -H "Content-Type: multipart/form-data" \
            -F "files=@./op_1_0320241830.mp4" && break;
            curlcode=$?
            if [[ $curlcode -eq 7 ]]; then sleep 10; else echo "curl failed with code $curlcode"; exit 1; fi;
          done;
          if [ $i -gt $max_retry ]; then echo "test failed with maximum retry"; exit 1; fi
      {{- else }}
      args:
        - |
          echo "test file" > /tmp/file1.txt;
          max_retry=20;
          for ((i=1; i<=max_retry; i++)); do
            curl http://{{ include "data-prep.fullname" . }}:{{ .Values.service.port }}/v1/dataprep -sS --fail-with-body \
            -X POST \
            -H "Content-Type: multipart/form-data" \
            -F "files=@/tmp/file1.txt" && break;
            curlcode=$?
            if [[ $curlcode -eq 7 ]]; then sleep 10; else echo "curl failed with code $curlcode"; exit 1; fi;
          done;
          curl http://{{ include "data-prep.fullname" . }}:{{ .Values.service.port }}/v1/dataprep/delete_file -sS \
          -X POST \
          -H "Content-Type: application/json" \
          -d '{"file_path": "file1.txt"}';
          if [ $i -gt $max_retry ]; then echo "test failed with maximum retry"; exit 1; fi
      {{- end }}
  restartPolicy: Never
