# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "data-prep.fullname" . }}
  labels:
    {{- include "data-prep.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "data-prep.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "data-prep.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Release.Name }}
          envFrom:
            - configMapRef:
                name: {{ include "data-prep.fullname" . }}-config
            {{- if .Values.global.extraEnvConfig }}
            - configMapRef:
                name: {{ .Values.global.extraEnvConfig }}
                optional: true
            {{- end }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.entryCommand }}
          command: {{ .Values.entryCommand }}
          {{- end }}
          {{- if .Values.extraArgs }}
          args:
            {{- range .Values.extraArgs }}
            - {{ . | quote }}
            {{- end }}
          {{- end }}
          ports:
            - name: data-prep
              containerPort: {{ .Values.service.containerPort }}
              protocol: TCP
          volumeMounts:
            {{- if .Values.global.modelUseHostPath }}
            - mountPath: /home/user/.cache/clip
              name: model-volume
              subPath: clip
            - mountPath: /home/user/.cache/huggingface/hub
              name: model-volume
              subPath: huggingface/hub
            {{- end }}
            - mountPath: /tmp
              name: tmp
          {{- if .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.startupProbe }}
          startupProbe:
            {{- toYaml .Values.startupProbe | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        {{- if .Values.global.modelUseHostPath }}
        - name: model-volume
          hostPath:
            path: {{ .Values.global.modelUseHostPath }}
            type: Directory
        {{- else if .Values.global.modelUsePVC }}
        - name: model-volume
          persistentVolumeClaim:
            claimName: {{ .Values.global.modelUsePVC }}
        {{- end }}
        - name: tmp
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.evenly_distributed }}
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              {{- include "data-prep.selectorLabels" . | nindent 14 }}
      {{- end }}
