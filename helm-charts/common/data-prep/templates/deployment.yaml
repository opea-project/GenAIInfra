# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "data-prep.fullname" . }}
  labels:
    {{- include "data-prep.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "data-prep.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- include "common.annotations" . | nindent 6 }}
      labels:
        {{- include "data-prep.selectorLabels" . | nindent 8 }}
    spec:
      {{- include "common.runtimeClassName" . | indent 6 }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "data-prep.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: wait-for-db
          envFrom:
            - configMapRef:
                name: {{ include "data-prep.fullname" . }}-config
            {{- if .Values.global.extraEnvConfig }}
            - configMapRef:
                name: {{ .Values.global.extraEnvConfig }}
                optional: true
            {{- end }}
          image: busybox:1.36
          command: ["sh", "-c"]
          args:
            - |
              {{- if eq "REDIS" .Values.DATAPREP_BACKEND }}
              TESTHOST=$(REDIS_HOST);
              TESTPORT=$(REDIS_PORT);
              {{- else if eq "MILVUS" .Values.DATAPREP_BACKEND }}
              TESTHOST=$(MILVUS_HOST);
              TESTPORT=$(MILVUS_PORT);
              {{- else if eq "QDRANT" .Values.DATAPREP_BACKEND }}
              TESTHOST=$(QDRANT_HOST);
              TESTPORT=$(QDRANT_PORT);
              {{- end }}
              wait_timeout={{ .Values.waitTimeout | default 1 }};
              total_timeout={{ .Values.retryTimeoutSeconds | default 60 }};
              j=0;
              while ! nc -w ${wait_timeout} -z ${TESTHOST} ${TESTPORT}; do
                j=$((j+wait_timeout));
                [[ $j -ge ${total_timeout} ]] && echo "ERROR: ${TESTHOST}:${TESTPORT} is NOT reachable in $j seconds!" && exit 1;
                j=$((j+2)); sleep 2;
              done;
              echo "${TESTHOST}:${TESTPORT} is reachable within $j seconds.";
      containers:
        - name: {{ .Chart.Name }}
          envFrom:
            - configMapRef:
                name: {{ include "data-prep.fullname" . }}-config
            {{- if .Values.global.extraEnvConfig }}
            - configMapRef:
                name: {{ .Values.global.extraEnvConfig }}
                optional: true
            {{- end }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          {{- if .Values.image.pullPolicy }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- end }}
          ports:
            - name: data-prep
              containerPort: {{ .Values.port }}
              protocol: TCP
          volumeMounts:
            - mountPath: /tmp
              name: tmp
            - mountPath: /home/user/comps/dataprep/src/uploaded_files
              name: uploaded-files
            - mountPath: /home/user/nltk_data
              name: nltk-data
            - mountPath: /home/user/comps/dataprep/src/unstructuredio/yolo_x_layout
              subPath: unstructuredio/yolo_x_layout
              name: model-volume
            - mountPath: /home/user/.config
              name: user-config-data
          {{- if .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.startupProbe }}
          startupProbe:
            {{- toYaml .Values.startupProbe | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: tmp
          emptyDir: {}
        - name: uploaded-files
          emptyDir: {}
        - name: user-config-data
          emptyDir: {}
        - name: model-volume
          {{- if .Values.global.offline }}
          {{- if .Values.global.modelUsePVC }}
          persistentVolumeClaim:
            claimName: {{ .Values.global.modelUsePVC }}
          {{- else if .Values.global.modelUseHostPath }}
          hostPath:
             path: {{ .Values.global.modelUseHostPath }}
             type: Directory
          {{- else }}
          {{- fail "'global.modelUsePVC' or 'global.modelUseHostPath' must be set in offline mode" }}
          {{- end }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: nltk-data
          {{- if .Values.global.offline }}
          {{- if .Values.global.nltkDataUsePVC }}
          persistentVolumeClaim:
            claimName: {{ .Values.global.nltkDataUsePVC }}
          {{- else if .Values.global.nltkDataUseHostPath }}
          hostPath:
             path: {{ .Values.global.nltkDataUseHostPath }}
             type: Directory
          {{- else }}
          {{- fail "'global.nltkDataUsePVC' or 'global.nltkDataUseHostPath' must be set in offline mode" }}
          {{- end }}
          {{- else }}
          emptyDir: {}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.evenly_distributed }}
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              {{- include "data-prep.selectorLabels" . | nindent 14 }}
      {{- end }}
