# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

# Default values for embedding-usvc.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Configurations for OPEA microservice mm-embedding
# Set it as a non-null string, such as true, if you want to enable logging facility.
LOGFLAG: ""

# embedding need to use different backend embedding engine: TEI, multimodal-bridgetower, PredictionGuard
# Default is to use the TEI(text-embedding-inference) as the backend
EMBEDDING_BACKEND: "TEI"

# Uncomment and set the following settings to use PredictionGuard as the backend
# EMBEDDING_BACKEND: "PredictionGuard"
PG_EMBEDDING_MODEL_NAME: "bridgetower-large-itm-mlm-itc"
PREDICTIONGUARD_API_KEY: ""

# Uncomment and set the following settings to use embedding-multimodal-bridgetower as the backend
# EMBEDDING_BACKEND: "BridgeTower"

# common backend embedding service endpoint URL, e.g. "http://tei:80", "http://mm-embedding:80"
EMBEDDING_ENDPOINT: ""

replicaCount: 1

image:
  repository: opea/embedding
  # Uncomment the following line to set desired image pull policy if needed, as one of Always, IfNotPresent, Never.
  # pullPolicy: ""
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  runAsNonRoot: true
  runAsUser: 1000
  capabilities:
    drop:
    - ALL
  seccompProfile:
    type: RuntimeDefault

service:
  type: ClusterIP
  # The default port for embedding service is 9000
  port: 6000

resources:
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi

readinessProbe:
  httpGet:
    path: v1/health_check
    port: embedding-usvc
  initialDelaySeconds: 5
  periodSeconds: 5
startupProbe:
  httpGet:
    path: v1/health_check
    port: embedding-usvc
  initialDelaySeconds: 5
  periodSeconds: 5
  failureThreshold: 120

nodeSelector: {}

tolerations: []

affinity: {}

tdxEnabled: false

global:
  http_proxy: ""
  https_proxy: ""
  no_proxy: ""
  # service account name to be shared with all parent/child charts.
  # If set, it will overwrite serviceAccount.name.
  # If set, and serviceAccount.create is false, it will assume this service account is already created by others.
  sharedSAName: ""

  # Install Prometheus serviceMonitor for service
  monitoring: false

  # Prometheus Helm install release name for serviceMonitor
  prometheusRelease: prometheus-stack

# The following is for CI tests only
tei:
  enabled: false
mm-embedding:
  enabled: false
