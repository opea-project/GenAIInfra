# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

# Default values for video-llama-lvm.

replicaCount: 1

llmDownload: true

image:
  repository: opea/video-llama-lvm-server
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: false
  allowPrivilegeEscalation: false
  runAsNonRoot: true
  runAsUser: 1000
  seccompProfile:
    type: RuntimeDefault

service:
  type: ClusterIP
  port: 80
  containerPort: 9009

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 5
  periodSeconds: 5
  failureThreshold: 24
readinessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 5
  periodSeconds: 5
# Video-Llama Server may take upto 15 mins to startup completely.
startupProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 5
  periodSeconds: 10
  failureThreshold: 90
# When LLM download is taking place, startup may take upto 60 mins.
startupProbeWithLlmDownload:
  tcpSocket:
    port: http
  initialDelaySeconds: 5
  periodSeconds: 30
  failureThreshold: 120

nodeSelector: {}

tolerations: []

affinity: {}

global:
  http_proxy: ""
  https_proxy: ""
  no_proxy: ""
  HUGGINGFACEHUB_API_TOKEN: "insert-your-huggingface-token-here"

  # Choose where to save your downloaded models
  # Set modelUseHostPath for local directory, this is good for one node test. Example:
  # modelUseHostPath: /mnt/opea-models
  # Set modelUsePVC for PersistentVolumeClaim(PVC), which is suitable for multinode deployment. Example:
  # modelUsePVC: model-volume
  # You can only set one of the following var, the behavior is not defined is both are set.
  # By default, both var are set to empty, the model will be downloaded and saved to a tmp volume.
  modelUseHostPath: ""
  modelUsePVC: ""
