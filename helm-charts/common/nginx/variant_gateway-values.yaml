# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

# Gateway mode example for nginx chart
# This demonstrates how to use nginx as a central gateway/router
#
# IMPORTANT: This is an example only. In practice, you should:
# 1. Create your own E2E chart that includes this nginx chart as a dependency
# 2. Define environment variables in your E2E chart's {{ .Release.Name }}-nginx-config ConfigMap
# 3. Use the nginx template configuration shown below
#
# For a complete example, see how chatqna chart implements this pattern.


# Example: Custom container startup for gateway mode
# The E2E chart should provide environment variables via {{ .Release.Name }}-nginx-config ConfigMap
customCommand:
  enabled: true
  command: ["/bin/sh", "-c"]
  args:
    - |
      # Environment variables are provided by the E2E chart's ConfigMap
      # Example variables: FRONTEND_SERVICE_IP, FRONTEND_SERVICE_PORT, CHATQNA_SERVICE_IP, etc.
      envsubst '${FRONTEND_SERVICE_IP} ${FRONTEND_SERVICE_PORT} ${CHATQNA_SERVICE_IP} ${CHATQNA_SERVICE_PORT} ${CODEGEN_SERVICE_IP} ${CODEGEN_SERVICE_PORT} ${DOCSUM_SERVICE_IP} ${DOCSUM_SERVICE_PORT} ${DATAPREP_SERVICE_IP} ${DATAPREP_SERVICE_PORT} ${CHATHISTORY_SERVICE_IP} ${CHATHISTORY_SERVICE_PORT} ${PROMPT_SERVICE_IP} ${PROMPT_SERVICE_PORT}' < /etc/nginx/templates/default.conf.template > /etc/nginx/conf.d/default.conf &&
      nginx -g 'daemon off;'

# Example: Custom nginx configuration template for gateway mode
# This template uses environment variables that should be provided by the E2E chart
nginxConfig:
  enabled: true
  template: |
    # Default server configuration
    server {
        listen 80 default_server;
        listen [::]:80 default_server;

        # Server name and root settings
        server_name _;
        root /usr/share/nginx/html;
        index index.html index.htm;

        # Default headers
        add_header X-Frame-Options SAMEORIGIN;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";

        # Timeouts
        client_max_body_size 10G;
        proxy_connect_timeout 600;
        proxy_send_timeout 600;
        proxy_read_timeout 600;
        send_timeout 600;

        # Root path goes to UI
        location / {
            proxy_pass http://${FRONTEND_SERVICE_IP}:${FRONTEND_SERVICE_PORT};
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Health check endpoint
        location /v1/health_check {
            return 200 'healthy\n';
            add_header Content-Type text/plain;
        }

        # ChatQnA service
        location /v1/chatqna {
            proxy_pass http://${CHATQNA_SERVICE_IP}:${CHATQNA_SERVICE_PORT}/v1/chatqna;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffering off;
            proxy_cache off;
            proxy_request_buffering off;
            gzip off;
        }

        # CodeGen service
        location /v1/codegen {
            proxy_pass http://${CODEGEN_SERVICE_IP}:${CODEGEN_SERVICE_PORT}/v1/codegen;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffering off;
            proxy_cache off;
            proxy_request_buffering off;
            gzip off;
        }

        # DocSum service
        location /v1/docsum {
            proxy_pass http://${DOCSUM_SERVICE_IP}:${DOCSUM_SERVICE_PORT}/v1/docsum;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffering off;
            proxy_cache off;
            proxy_request_buffering off;
            gzip off;
        }

        # DataPrep service
        location /v1/dataprep {
            proxy_pass http://${DATAPREP_SERVICE_IP}:${DATAPREP_SERVICE_PORT}/v1/dataprep;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 6000;
            proxy_send_timeout 6000;
            proxy_read_timeout 6000;
            send_timeout 6000;
        }

        # Chathistory service
        location /v1/chathistory {
            proxy_pass http://${CHATHISTORY_SERVICE_IP}:${CHATHISTORY_SERVICE_PORT}/v1/chathistory;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffering off;
            proxy_cache off;
            proxy_request_buffering off;
            gzip off;
        }

        # Prompt service
        location /v1/prompt {
            proxy_pass http://${PROMPT_SERVICE_IP}:${PROMPT_SERVICE_PORT}/v1/prompt;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffering off;
            proxy_cache off;
            proxy_request_buffering off;
            gzip off;
        }

        # Keycloak service
        location /auth {
            proxy_pass http://keycloak.keycloak.svc.cluster.local:80;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffering off;
            proxy_cache off;
            proxy_request_buffering off;
            gzip off;
        }

        # Error pages
        error_page 404 /404.html;
        location = /404.html {
            root /usr/share/nginx/html;
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

# Optional: Ingress configuration for gateway mode
# Enable this if you want to expose the gateway via an ingress controller
# Replace the hostname with your actual domain name
ingress:
  enabled: false
  className: ""  # e.g., "nginx", "traefik", etc.
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    # cert-manager.io/cluster-issuer: "letsencrypt-prod"
  hosts:
    - host: opea-gateway.yourdomain.com  # Replace with your actual hostname
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: opea-gateway-tls
  #    hosts:
  #      - opea-gateway.yourdomain.com  # Replace with your actual hostname

# Health check probes for gateway mode
readinessProbe:
  httpGet:
    path: /v1/health_check
    port: nginx
  initialDelaySeconds: 5
  periodSeconds: 5

startupProbe:
  httpGet:
    path: /v1/health_check
    port: nginx
  initialDelaySeconds: 5
  periodSeconds: 5
  failureThreshold: 120


# ---
# Example ConfigMap that your E2E chart should create
# This should be in your E2E chart's templates directory, not in the nginx chart
#
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: {{ .Release.Name }}-nginx-config
# data:
#   FRONTEND_SERVICE_IP: "ui.ui.svc.cluster.local"
#   FRONTEND_SERVICE_PORT: "5173"
#   CHATQNA_SERVICE_IP: "chatqna.chatqna.svc.cluster.local"
#   CHATQNA_SERVICE_PORT: "8888"
#   CODEGEN_SERVICE_IP: "codegen.codegen.svc.cluster.local"
#   CODEGEN_SERVICE_PORT: "7778"
#   DOCSUM_SERVICE_IP: "docsum.docsum.svc.cluster.local"
#   DOCSUM_SERVICE_PORT: "8888"
#   DATAPREP_SERVICE_IP: "chatqna-data-prep.chatqna.svc.cluster.local"
#   DATAPREP_SERVICE_PORT: "6007"
#   CHATHISTORY_SERVICE_IP: "chathistory-usvc.chathistory.svc.cluster.local"
#   CHATHISTORY_SERVICE_PORT: "6012"
#   PROMPT_SERVICE_IP: "prompt-usvc.prompt.svc.cluster.local"
#   PROMPT_SERVICE_PORT: "6018"
