# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "speecht5.fullname" . }}
  labels:
    {{- include "speecht5.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "speecht5.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "speecht5.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "speecht5.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if not (hasPrefix "/data/" .Values.TTS_MODEL_PATH) }}
      initContainers:
        - name: model-downloader
          envFrom:
            - configMapRef:
                name: {{ include "speecht5.fullname" . }}-config
          securityContext:
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            {{- if hasKey .Values.securityContext "runAsGroup" }}
            runAsGroup: {{ .Values.securityContext.runAsGroup }}
            {{- end }}
            capabilities:
              drop:
              - ALL
              add:
              - DAC_OVERRIDE
              # To be able to make data model directory group writable for
              # previously downloaded model by old versions of helm chart
              - FOWNER
            seccompProfile:
              type: RuntimeDefault
          image: huggingface/downloader:0.17.3
          command: ['sh', '-ec']
          args:
            - |
              echo "Huggingface log in ...";
              huggingface-cli login --token $(HF_TOKEN);
              echo "Download models {{ .Values.TTS_MODEL_PATH }} {{ .Values.VOCODER_MODEL }} ... ";
              huggingface-cli download --cache-dir /data {{ .Values.TTS_MODEL_PATH | quote }};
              huggingface-cli download --cache-dir /data {{ .Values.VOCODER_MODEL| quote }};
              echo "Change model files mode ...";
              chmod -R g+w /data/models--{{ replace "/" "--" .Values.TTS_MODEL_PATH }};
              chmod -R g+w /data/models--{{ replace "/" "--" .Values.VOCODER_MODEL }}
              # NOTE: Buggy logout command;
              # huggingface-cli logout;
          volumeMounts:
            - mountPath: /data
              name: model-volume
            - mountPath: /tmp
              name: tmp
      {{- end }}
      containers:
        - name: {{ .Release.Name }}
          envFrom:
            - configMapRef:
                name: {{ include "speecht5.fullname" . }}-config
            {{- if .Values.global.extraEnvConfig }}
            - configMapRef:
                name: {{ .Values.global.extraEnvConfig }}
                optional: true
            {{- end }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          {{- if .Values.image.pullPolicy }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- end }}
          ports:
            - name: speecht5
              containerPort: 7055
              protocol: TCP
          volumeMounts:
            - mountPath: /data
              name: model-volume
            - mountPath: /tmp
              name: tmp
          {{- if .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.startupProbe }}
          startupProbe:
            {{- toYaml .Values.startupProbe | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: model-volume
          {{- if .Values.global.modelUsePVC }}
          persistentVolumeClaim:
            claimName: {{ .Values.global.modelUsePVC }}
          {{- else if .Values.global.modelUseHostPath }}
          hostPath:
            path: {{ .Values.global.modelUseHostPath }}
            type: Directory
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: tmp
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.evenly_distributed }}
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              {{- include "speecht5.selectorLabels" . | nindent 14 }}
      {{- end }}
