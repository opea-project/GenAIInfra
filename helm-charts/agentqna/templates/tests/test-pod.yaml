# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "agentqna.fullname" . }}-testpod"
  labels:
    {{- include "agentqna.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
    #"helm.sh/hook-delete-policy": "hook-succeeded, hook-failure"
spec:
  containers:
    - name: curl
      image: python:3.10.14
      command: ['bash', '-c']
      args:
        - |
          # Ingest data
          cd /mnt/tools
          pip install requests tqdm
          python3 index_data.py --filedir /mnt/tools --filename test_docs_music.jsonl --host_ip {{ include "agentqna.fullname" (index .Subcharts "data-prep") }}
          # Test ragagent
          max_retry=10;
          for ((i=1; i<=max_retry; i++)); do
            curl http://{{ include "agentqna.fullname" (index .Subcharts "ragagent") }}:{{ .Values.ragagent.service.port }}/v1/chat/completions -sS --fail-with-body \
            -X POST \
            -d '{"messages": "Tell me something about Thriller"}' \
            -H 'Content-Type: application/json' && break;
            curlcode=$?
            if [[ $curlcode -eq 7 ]]; then sleep 10; else echo "curl failed with code $curlcode"; exit 1; fi;
          done;
          if [ $i -gt $max_retry ]; then echo "test failed with maximum retry"; exit 1; fi
          # Test sqlagent
          max_retry=10;
          for ((i=1; i<=max_retry; i++)); do
            curl http://{{ include "agentqna.fullname" (index .Subcharts "sqlagent") }}:{{ .Values.sqlagent.service.port }}/v1/chat/completions -sS --fail-with-body \
            -X POST \
            -d '{"messages": "How many employees are there in the company?"}' \
            -H 'Content-Type: application/json' && break;
            curlcode=$?
            if [[ $curlcode -eq 7 ]]; then sleep 10; else echo "curl failed with code $curlcode"; exit 1; fi;
          done;
          if [ $i -gt $max_retry ]; then echo "test failed with maximum retry"; exit 1; fi
          # Test supervisor
          max_retry=20;
          for ((i=1; i<=max_retry; i++)); do
            curl http://{{ include "agentqna.fullname" (index .Subcharts "supervisor") }}:{{ .Values.supervisor.service.port }}/v1/chat/completions -sS --fail-with-body \
            -X POST \
            -d '{"messages": "How many albums does Iron Maiden have?"}' \
            -H 'Content-Type: application/json' && break;
            curlcode=$?
            if [[ $curlcode -eq 7 ]]; then sleep 10; else echo "curl failed with code $curlcode"; exit 1; fi;
          done;
          if [ $i -gt $max_retry ]; then echo "test failed with maximum retry"; exit 1; fi
      volumeMounts:
        - mountPath: /mnt/tools
          name: test
  volumes:
    - name: test
      hostPath:
        path: /mnt/tools
        type: Directory
  {{- with .Values.nodeSelector }}
  nodeSelector:
    {{- toYaml . | nindent 8 }}
  {{- end }}

  restartPolicy: Never
