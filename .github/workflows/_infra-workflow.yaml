# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

name: GenAIInfra GMC Jobs
permissions: read-all
on:
  workflow_call:
    inputs:
      tag:
        default: "latest"
        required: false
        type: string
      build:
        default: true
        required: false
        type: boolean
      scan:
        default: true
        required: false
        type: boolean
      test_gmc:
        default: true
        required: false
        type: boolean
      publish:
        default: false
        required: false
        type: boolean
      publish_tags:
        default: "latest"
        required: false
        type: string
jobs:
####################################################################################################
# Image Build
####################################################################################################
  image-build:
    if: ${{ fromJSON(inputs.build) }}
    uses: ./.github/workflows/_gmc-image-build.yaml
    with:
      image_tag: ${{ inputs.tag }}
      runner_label: 'docker-build-xeon'

####################################################################################################
# Trivy Scan
####################################################################################################
  scan-images:
    needs: [image-build]
    if: ${{ fromJSON(inputs.scan) }}
    strategy:
      matrix:
        image: ["gmcmanager", "gmcrouter"]
    runs-on: 'docker-build-xeon'
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2.8.1
        with:
          egress-policy: audit

      - name: Pull Image
        run: docker pull ${OPEA_IMAGE_REPO}opea/${{ matrix.image }}:${{ inputs.tag }}

      - name: Scan Container
        uses: opea-project/validation/actions/trivy-scan@main
        with:
          image-ref: ${OPEA_IMAGE_REPO}opea/${{ matrix.image }}:${{ inputs.tag }}
          output: ${{ matrix.image }}-scan.txt

      - name: Cleanup
        if: always()
        run: docker rmi -f ${OPEA_IMAGE_REPO}opea/${{ matrix.image }}:${{ inputs.tag }}
      - uses: actions/upload-artifact@v4.3.4
        with:
          name: gmc-scan
          path: ${{ matrix.image }}-scan.txt
          overwrite: true

####################################################################################################
# GMC Test
####################################################################################################
  test-gmc:
    needs: [image-build]
    if: ${{ fromJSON(inputs.test_gmc) }}
    uses: ./.github/workflows/_gmc-e2e.yaml
    with:
      repo: ${{ needs.image-build.outputs.image_repo }}
      tag: ${{ needs.image-build.outputs.image_tag }}
    secrets: inherit


####################################################################################################
# Publish
####################################################################################################
  publish:
    needs: [image-build, scan-images, test-gmc]
    if: ${{ fromJSON(inputs.publish) }}
    strategy:
      matrix:
        image: ["gmcmanager", "gmcrouter"]
    runs-on: "docker-build-xeon"
    steps:
      - name: Image Publish
        uses: opea-project/validation/actions/image-publish@main
        with:
          local_image_ref: ${OPEA_IMAGE_REPO}opea/${{ matrix.image }}:${{ inputs.tag }}
          image_name: opea/${{ matrix.image }}
          publish_tags: ${{ inputs.publish_tags }}
