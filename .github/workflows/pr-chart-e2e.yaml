# Copyright (C) 2025 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

name: E2E test with helm charts

on:
  pull_request_target:
    branches: [main]
    types: [opened, reopened, ready_for_review, synchronize] # added `ready_for_review` since draft is skipped
    paths:
      - helm-charts/**
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  CHARTS_DIR: "helm-charts"

jobs:
  job1:
    name: Get-test-matrix
    runs-on: ubuntu-latest
    outputs:
      run_matrix: ${{ steps.get-test-matrix.outputs.run_matrix }}
    steps:
      - name: Checkout out Repo
        uses: actions/checkout@v4
        with:
          ref: "refs/pull/${{ github.event.number }}/merge"
          fetch-depth: 0

      - name: Get test matrix
        id: get-test-matrix
        run: |
          if grep -r '^version: ' `find helm-charts/ -name "Chart.yaml"` | grep -v "0-latest"; then
            echo "Version check failed, main branch should always use version 0-latest"
            exit 1
          fi
          base_commit=${{ github.event.pull_request.base.sha }}
          merged_commit=$(git log -1 --format='%H')
          e2e_charts=$(git diff --name-only ${base_commit} ${merged_commit} | \
          grep "^$CHARTS_DIR/" | \
          grep -vE 'valuefiles.yaml|common|*.md|*.sh' | \
          cut -d'/' -f2 | sort -u )
          common_charts=$(git diff --name-only ${base_commit} ${merged_commit} | \
          grep "^$CHARTS_DIR/common" | \
          grep -vE 'README.md|*.sh' | \
          cut -d'/' -f3 | sort -u )
          run_matrix="{\"include\":["
          for chart in ${e2e_charts}; do
            for file in "$CHARTS_DIR/$chart"/*values.yaml; do
              if [ -f "$file" ]; then
                if [[ "$file" == *"nv-values.yaml" ]] || [[ "$file" == *"hpa-values.yaml" ]] || [[ "$file" == *"/values.yaml" ]]; then
                  continue
                fi
                if [[ "$file" == *"variant_"* ]]; then
                  continue
                fi
                filename=$(basename "$file" .yaml)
                if [[ "$filename" == *"gaudi"* ]]; then
                  run_matrix="${run_matrix}{\"example\":\"${chart}\",\"hardware\":\"gaudi\", \"valuefile\":\"${filename}\"},"
                else
                  run_matrix="${run_matrix}{\"example\":\"${chart}\",\"hardware\":\"xeon\", \"valuefile\":\"${filename}\"},"
                fi
              fi
            done
          done
          for chart in ${common_charts}; do
            for file in "$CHARTS_DIR/common/$chart"/*values.yaml; do
              if [ -f "$file" ]; then
                if [[ "$file" == *"nv-values.yaml" ]] || [[ "$file" == *"hpa-values.yaml" ]] || [[ "$file" == *"/values.yaml" ]]; then
                  continue
                fi
                if [[ "$file" == *"variant_"* ]]; then
                  continue
                fi
                filename=$(basename "$file" .yaml)
                if [[ "$filename" == *"gaudi"* ]]; then
                  run_matrix="${run_matrix}{\"example\":\"${chart}\",\"hardware\":\"gaudi\", \"valuefile\":\"${filename}\",\"directory\":\"common\"},"
                else
                  run_matrix="${run_matrix}{\"example\":\"${chart}\",\"hardware\":\"xeon\", \"valuefile\":\"${filename}\",\"directory\":\"common\"},"
                fi
              fi
            done
          done
          run_matrix=$run_matrix"]}"
          echo "run_matrix=${run_matrix}"
          echo "run_matrix=${run_matrix}" >> $GITHUB_OUTPUT

  Chart-test:
    needs: [job1]
    if: always() && ${{ needs.job1.outputs.run_matrix.example.length }} > 0
    uses: ./.github/workflows/_helm-e2e.yaml
    strategy:
      matrix: ${{ fromJSON(needs.job1.outputs.run_matrix) }}
    with:
      workload: ${{ matrix.directory }}/${{ matrix.example }}
      hardware: ${{ matrix.hardware }}
      valuefile: ${{ matrix.valuefile }}
    secrets: inherit
